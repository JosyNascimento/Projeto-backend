<div class="welcome-message">Bem-vindo! Faça login para continuar!</div>
 {{#if message}}
    <p style="color: rgb(150, 51, 51);">{{message}}</p>
  {{/if}}
<div class="login-container">
  <div class="login-card">

    <h1>Login</h1>

    <form action="/login" method="POST">
      <label for="email">Email:</label>
      <input type="email" id="email" name="email" required aria-label="Digite seu email">
      <label for="password">Senha:</label>
      <input type="password" id="password" name="password" required aria-label="Digite sua senha">

      <button type="submit" aria-label="Entrar no sistema">Entrar</button>
      <a href="/reset-password">Redefinir senha</a>
    </form>

    <a href="/api/sessions/github"><button>Entrar com GitHub</button></a>
  </div>
</div>
  
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // Captura a query string
  const params = new URLSearchParams(window.location.search);

  // Verifica se existe o parâmetro 'message'
  if (params.has('message')) {
    const message = params.get('message');



    // Exibe o alerta com SweetAlert
    Swal.fire({
      icon: ['Usuário registrado com sucesso', 'Senha redefinida com sucesso'].includes(message) ? 'success' : 'error',
      title: ['Usuário registrado com sucesso', 'Senha redefinida com sucesso'].includes(message) ? 'Sucesso' : 'Erro',
      text: message,
      confirmButtonText: 'OK'
    });

    // Remove o parâmetro da URL
    const newUrl = window.location.pathname;
    window.history.replaceState({}, document.title, newUrl);
  }

  // Mensagem de erro exemplo (pode ser alterada pelo backend)
  if (params.has('error')) {
    const error = params.get('error');

    Swal.fire({
      icon: 'error',
      title: 'Erro',
      text: error,
      confirmButtonText: 'Tentar novamente'
    });

    const newUrl = window.location.pathname;
    window.history.replaceState({}, document.title, newUrl);
  }
</script>

<style>

  .welcome-message {
    text-align: center;
    margin-bottom: 20px;
    font-size: 30px;
     color: #030000; 
     text-decoration: none;
  }

  .login-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  .login-card {
    background-color: #e7b5d2;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(46, 3, 26, 0.815);
    width: 300px;
    max-width: 90%; /* Ajuste para telas menores */
  }

.login-card a:hover {
    color: darkviolet;
}

  .login-card h1, {
    text-align: center;
    margin-bottom: 20px;
    
  }

.login-card a {
    color: rgb(238, 28, 238);
    text-decoration: none;
}

  .login-card label {
    display: block;
    margin: 10px 0 5px;

  }

  .login-card input {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  .login-card button {
    width: 100%;
    padding: 10px;
    background-color: #360a1f;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  .login-card button:hover {
    background-color: #a807a3;
  }

  @media (max-width: 500px) {
    .login-card {
      padding: 15px;
    }

    .welcome-message {
      font-size: 16px;
    }
  }
</style>